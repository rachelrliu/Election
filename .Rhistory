raw_long <- reshape2::melt(raw,value.name = 'State')
raw_long %>% mutate( year = substr(variable,2,5),
state_abb = ifelse(state.abb[match(State,state.name)],
state.abb[match(State,state.name)],
State))
state.abb[match(raw$longState,state.name)
)
state.abb[match(raw$longState,state.name)]
state.abb[match(raw_long$State,state.name)]
is.na(state.abb[match(raw_long$State,state.name)])
!is.na(state.abb[match(raw_long$State,state.name)])
raw_long %>% mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
State))
raw_long %>% mutate( year = substr(variable,2,5))
raw <- read.csv('raw.csv',header = TRUE)
raw_long <- reshape2::melt(raw,value.name = 'State')
?melt
raw_long <- reshape2::melt(raw,id.vars = 'State')
View(raw_long)
raw_long %>% mutate( year = substr(variable,2,5)),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
State))
raw_long %>% mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
State))
raw_long %>% mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
str(State)))
raw_long %>% mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
as.charactera(State)))
raw_long %>% mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
as.character(State)))
income <- raw_long %>%
mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
as.character(State))) %>%
select(state_abb,year,value)
View(income)
us <- df %>% filter(State == 'United State')
us <- income %>% filter(State == 'United State')
us <- income %>% filter(state_abb == 'United State')
relative_income <- left_join(income,us,by = 'year')
us <- income %>% filter(state_abb == 'United States')
relative_income <- left_join(income,us,by = 'year')
View(relative_income)
View(income)
View(relative_income)
us <- income %>% filter(state_abb == 'United States')
relative_income <- left_join(income,us,by = 'year') %>%
dplyr::rename(state_abb = state_abb.x,
household_income= value.x ,
us = state_abb.y,
national_income = value.y) %>%
mutate(relative_income = household_income/national_income)
View(relative_income)
us <- income %>% filter(state_abb == 'United States')
relative_income <- left_join(income,us,by = 'year') %>%
dplyr::rename(state_abb = state_abb.x,
household_income= value.x ,
us = state_abb.y,
national_income = value.y) %>%
mutate(relative_income = household_income/national_income) %>%
select(state_abb,year,household_income,national_income,relative_income)
write.csv(relative_income,'income.csv',row.names = F)
election <- read.csv('election_raw.csv',header = TRUE)
income_raw <- read.csv('income_raw.csv',header = TRUE)
income_raw_long <- reshape2::melt(income_raw,id.vars = 'State')
income <- income_raw_long %>%
mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
as.character(State))) %>%
select(state_abb,year,value)
setwd('/Users/ruiqiliu/Desktop/MSBA/Others/USElection')
#Read in household income data, the data can be downloaded at US Census Bureau:
#https://www.census.gov/data/tables/time-series/demo/income-poverty/historical-income-households.html
income_raw <- read.csv('income_raw.csv',header = TRUE)
#transform panel data to long format
income_raw_long <- reshape2::melt(income_raw,id.vars = 'State')
#form income dataframe
income <- income_raw_long %>%
mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
as.character(State))) %>%
select(state_abb,year,value)
setwd('/Users/ruiqiliu/Desktop/MSBA/Others/USElection')
#Read in household income data, the data can be downloaded at US Census Bureau:
#https://www.census.gov/data/tables/time-series/demo/income-poverty/historical-income-households.html
income_raw <- read.csv('income_raw.csv',header = TRUE)
#transform panel data to long format
income_raw_long <- reshape2::melt(income_raw,id.vars = 'State')
#form income dataframe
income <- income_raw_long %>%
mutate( year = substr(variable,2,5),
state_abb = ifelse(!is.na(state.abb[match(State,state.name)]),
state.abb[match(State,state.name)],
as.character(State))) %>%
select(state_abb,year,value)
#calculate relative income per state
us <- income %>% filter(state_abb == 'United States')
relative_income <- left_join(income,us,by = 'year') %>%
dplyr::rename(state_abb = state_abb.x,
household_income= value.x ,
us = state_abb.y,
national_income = value.y) %>%
mutate(relative_income = household_income/national_income) %>%
select(state_abb,year,household_income,national_income,relative_income)
View(relative_income)
election <- read.csv('election_raw.csv',header = TRUE)
View(election)
election_raw <- read.csv('election_raw.csv',header = TRUE)
View(election_raw)
election_raw <- read.csv('election_raw.csv',header = TRUE)
View(election_raw)
election <- election_row %>%
mutate(margin = Republican - Democratic)
election <- election_raw %>%
mutate(margin = Republican - Democratic)
View(election)
election <- election_raw %>%
mutate(margin = Republican - Democratic)
rename(state_abb = State)
election <- election_raw %>%
mutate(margin = Republican - Democratic) %>%
rename(state_abb = State)
View(election_raw)
View(election)
output <- left_join(election,income,by = c('state_abb','year'))
election <- election_raw %>%
mutate(margin = Republican - Democratic) %>%
transform(year = as.character(year))
rename(state_abb = State)
election <- election_raw %>%
mutate(margin = Republican - Democratic) %>%
transform(year = as.character(year)) %>%
rename(state_abb = State)
output <- left_join(election,income,by = c('state_abb','year'))
View(output)
View(output)
str(election)
str(relative_income)
election_raw <- read.csv('election_raw.csv',header = TRUE,stringsAsFactors = FALSE)
election <- election_raw %>%
mutate(margin = Republican - Democratic) %>%
transform(year = as.character(year)) %>%
rename(state_abb = State)
output <- left_join(election,income,by = c('state_abb','year'))
View(output)
output <- left_join(election,relative_income,by = c('state_abb','year'))
View(output)
write.csv(output,'plot_df.csv',row.names = FALSE)
0.8 * (1 / (1+0.8^2))
Corr_Y2Y3 <- 0.4878049/0.6097561
Cov_Y2Y3 <- 0.8 * (1 / (1+0.8^2))
0.4878049/0.6097561
0.8^5 * (1/(1+0.8^2))
Cov_Y5Y10 <- 0.8^5 * (1/(1+0.8^2))
0.8/(1_9,8^2)
0.8/(1-0.8^2)
0.8 * (1 / (1-0.8^2))
0.8^5 * (1/(1-0.8^2))
0.8^5
1 / (1 - 0.8^2)
0.8 * (1 / (1-0.8^2))
0.8^5 * (1/(1-0.8^2))
?polyroot()
polyroot(1,-2.2,1.57,-0.36)
polyroot(c(1,-2.2,1.57,-0.36))
polyroot(c(1,-2,1))
1-2.2*2+1.57*2^2-0.36*2^3
suppressPackageStartupMessages({
library(TSA)
library(forecast)
library(ggplot2)
library(dplyr)
})
data.frame(e = rnrom(100))
data.frame(e = rnorm(100))
df2c <- data.frame(e = rnorm(N*T)) %>% mutate(t = rep(1:T,N),id = rep(1:N,T,each = TRUE))
N <- 100L
T <- 100L
df2c <- data.frame(e = rnorm(N*T)) %>% mutate(t = rep(1:T,N),id = rep(1:N,T,each = TRUE))
df2c
?rep
rep(1:5,2)
rep(1:5,2,each = TRUE)
df2c <- data.frame(e = rnorm(N*T)) %>% mutate(t = rep(1:T,N),id = rep(1:N,each = T))
df2c
df2c <- data.frame(e = rnorm(N*T)) %>%
mutate(t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(0,N*T))
data.frame(e = rnorm(N*T)) %>%
mutate(t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(0,N*T))
data.frame(e = rnorm(N*T)) %>%
mutate(t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(0,N*T)) %>%
mutate(Y = 2.2 * zlag(Y) - 1.57 * zlag(Y,2) +0.36 * zlag(Y,3) + e)
df2a <- data.frame(rnorm(100),Y = rep(NA,T))
View(df2a)
df2a <- data.frame(e = rnorm(100),Y = rep(NA,T))
df2a[1,'Y'] <- 0  #use 0 as a starting value for Y_1
View(df2a)
for(i in 2:T){
df2a[i,'Y'] <- 0.8 * df2a[i-1,'Y'] + df2a[i,'e']
}
View(df2a)
set.seed(42) # Please do not change the seed
T <- 100L
df2a <- data.frame(e = rnorm(100),Y = rep(NA,T))
df2a[1,'Y'] <- 0  #use 0 as a starting value for Y_1
for(i in 2:T){
df2a[i,'Y'] <- 0.8 * df2a[i-1,'Y'] + df2a[i,'e']
}
101 % 100
101// 100
101 %% 100
df2b <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2b[1,'Y'] <- 0
View(df2b)
150 %% 100
2 %% 100
View(df2b)
for(i in 2:N*T){
df2b[i,'Y'] = 0.8 * df2b[i-1,'Y'] + df2b[i,'e']
if(i%%100 == 1) {
df2b[i,'Y'] = df2b[i-1,'Y']
}
}
View(df2b)
df2b <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2b[1,'Y'] <- 0
2:N*t
2:N*T
2:(N*T)
for(i in 2:(N*T)){
df2b[i,'Y'] = 0.8 * df2b[i-1,'Y'] + df2b[i,'e']
if(i%%100 == 1) {
df2b[i,'Y'] = df2b[i-1,'Y']
}
}
View(df2a)
View(df2b)
p2c <- ggplot(df2b) + geom_line(aex(x = t,y= Y,group = id),alpha = 0.05)
p2c <- ggplot(df2b) + geom_line(aes(x = t,y= Y,group = id),alpha = 0.05)
p2c
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(0,N*T))
sample_path = filter(df2b,id == 10)
sample_path = filter(df2b,id == 10)$Y
View(df2b)
ggAcf(sample_path)
sample_path10 = filter(df2b,id == 10)$Y
# plot below
ggAcf(sample_path10)
sample_path11 = filter(df2b,id == 11)$Y
# plot below
ggAcf(sample_path11)
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
View(df2c)
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
for(i in 4:(N*T)){
if(i%%100 <= 3) {
df2b[i,'Y'] = 0
}
df2b[i,'Y'] = 2.2 * df2b[i-1,'Y'] - 1.57 df2b[i-2,'Y'] +
for(i in 4:(N*T)){
if(i%%100 <= 3) {
df2b[i,'Y'] = 0
}
df2b[i,'Y'] = 2.2 * df2b[i-1,'Y'] - 1.57 df2b[i-2,'Y'] +
for(i in 4:(N*T)){
if(i%%100 <= 3) {
df2b[i,'Y'] <- 0
}
df2b[i,'Y'] = 2.2 * df2b[i-1,'Y'] - 1.57 * df2b[i-2,'Y'] +
0.36 * df2b[i-3,'Y'] + df2b[i,'e']
}
N <- 100L
T <- 100L
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
for(i in 4:(N*T)){
if(i%%100 <= 3) {
df2c[i,'Y'] <- 0
}
df2c[i,'Y'] = 2.2 * df2c[i-1,'Y'] - 1.57 * df2c[i-2,'Y'] +
0.36 * df2c[i-3,'Y'] + df2c[i,'e']
}
View(df2c)
for(i in 4:(N*T)){
df2c[i,'Y'] = 2.2 * df2c[i-1,'Y'] - 1.57 * df2c[i-2,'Y'] +
0.36 * df2c[i-3,'Y'] + df2c[i,'e']
if(i%%100 <= 3) {
df2c[i,'Y'] <- 0
}
}
View(df2c)
1 %in% c(1,2,3)
1 %in% c(0,0,9)
for(i in 4:(N*T)){
df2c[i,'Y'] = 2.2 * df2c[i-1,'Y'] - 1.57 * df2c[i-2,'Y'] +
0.36 * df2c[i-3,'Y'] + df2c[i,'e']
if(i%%100 %in% c(1,2,3)) {
df2c[i,'Y'] <- 0
}
}
View(df2c)
p1d <- ggplot(df2c) + geom_line(aes(x = t, y = Y,group = id),alpha = 0.05)
p1d
p1d <- ggplot(df2c) + geom_line(aes(x = t, y = Y,group = id),alpha = 0.1)
p1d
# ggplot here
p1d <- ggplot(df2c) + geom_line(aes(x = t, y = Y,group = id),alpha = 0.05)
p1d
polyroot(1,-2.4,1.55,-0.3)
polyroot(c(1,-2.4,1.55,-0.3))
set.seed(42) # Please do not change the seed
N <- 100L
T <- 100L
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
for(i in 4:(N*T)){
df2c[i,'Y'] = 2.2 * df2c[i-1,'Y'] - 1.57 * df2c[i-2,'Y'] +
0.36 * df2c[i-3,'Y'] + df2c[i,'e']
if(i%%100 %in% c(1,2,3)) {
df2c[i,'Y'] <- 0
}
}
set.seed(42) # Please do not change the seed
N <- 100L
T <- 100L
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
for(i in 4:(N*T)){
df2c[i,'Y'] = 2.2 * df2c[i-1,'Y'] - 1.57 * df2c[i-2,'Y'] +
0.36 * df2c[i-3,'Y'] + df2c[i,'e']
if(i%%100 %in% c(1,2,3)) {
df2c[i,'Y'] <- 0
}
}
set.seed(42) # Please do not change the seed
N <- 100L
T <- 100L
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
for(i in 4:(N*T)){
df2c[i,'Y'] = 2.2 * df2c[i-1,'Y'] - 1.57 * df2c[i-2,'Y'] +
0.36 * df2c[i-3,'Y'] + df2c[i,'e']
if(i%%100 %in% c(1,2,3)) {
df2c[i,'Y'] <- 0
}
}
N <- 100L
T <- 20L
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
for(i in 4:(N*T)){
df2c[i,'Y'] = 2.4 * df2c[i-1,'Y'] - 1.55 * df2c[i-2,'Y'] +
0.3 * df2c[i-3,'Y'] + df2c[i,'e']
if(i%%100 %in% c(1,2,3)) {
df2c[i,'Y'] <- 0
}
}
p1d <- ggplot(df2c) + geom_line(aes(x = t, y = Y,group = id),alpha = 0.05)
p1d
View(df2c)
View(df2c)
df2c <- data.frame(e = rnorm(N*T),t = rep(1:T,N),id = rep(1:N,each = T),Y = rep(NA,N*T))
df2c[1:3,'Y'] <- 0
for(i in 4:(N*T)){
df2c[i,'Y'] = 2.4 * df2c[i-1,'Y'] - 1.55 * df2c[i-2,'Y'] +
0.3 * df2c[i-3,'Y'] + df2c[i,'e']
if(i%%20 %in% c(1,2,3)) {
df2c[i,'Y'] <- 0
}
}
p1d <- ggplot(df2c) + geom_line(aes(x = t, y = Y,group = id),alpha = 0.05)
p1d
